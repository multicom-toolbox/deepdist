#!/usr/bin/env python
docstring='''
Compare feature with DNCON4_system/example/T0771

Usage: python compare_feat.py <target-id> <pdb> <feat-dir> <example-dir>
example:
    python compare_feat.py T0771 ../example/T0771.pdb ../features/T0771 ../example/T0771
'''

import sys,os
import glob
import re
import subprocess
import filecmp
import numpy as np

def getY(true_file):
  # calcualte the length of the protein (the first feature)
  L = 0
  with open(true_file) as f:
    for line in f:
      if re.match('[a-zA-Z]+', line) is not None:
        continue
      L = line.strip().split()
      L = len(L)
      break
  Y = np.zeros((L, L))
  i = 0
  with open(true_file) as f:
    for line in f:
      if re.match('[a-zA-Z]+', line) is not None:
        continue
      this_line = line.strip().split()
      Y[i, 0:L] = np.asarray(this_line)
      i = i + 1
  return Y

def map2rr(target,cmap_file,map_type):
    f = open(target+".raw",'w')
    cmap = getY(cmap_file)
    L = cmap.shape[0]
    for i in range(0,L):
     for j in range(i+1,L):
         f.write(str(i+1)+" "+str(j+1)+" 0 8 "+str(cmap[i][j])+"\n")
    f.close()
    os.system('egrep -v \"^>\" ../'+target+'.fasta'+'  > '+target+'.'+map_type+'.rr')
    os.system('cat '+target+'.raw >> '+target+'.'+map_type+'.rr')
    os.system('rm -f '+target+'.raw')

def freecon2rr(target,free_rr):
    os.system('egrep -v \"^>\" ../'+target+'.fasta'+'  > '+target+'.coneva')
    f = open(target+".coneva",'a')
    for line in open(free_rr, 'r'):
        line = line.rstrip()
        arr = line.split()
        score = float(arr[5])
        if score < 0:
            score = 0
        f.write(arr[0]+' '+arr[2]+' 0 8 '+arr[5]+"\n")
    f.close()


def evalrr(rr,pdb):
    os.system("perl "+script_path+"/coneva-lite.pl -rr "+rr+" -pdb "+pdb+" > precision.txt")

def check_path(filepath):
    if not os.path.exists(filepath):
        print(filepath+" doesn't exist!!")
        sys.exit(1)

def ALNSTAT(colstats):
    i = 0
    lst = []
    for line in open(colstats, "r"):
        i = i+1
        line = line.rstrip()
        if i > 3:
            break
        else:
            lst.append(line)
    N = float(lst[1])
    NEFF = float(lst[2])
    N = int(N)
    NEFF =  int(NEFF)
    return N,NEFF


if __name__=="__main__":

    if len(sys.argv) != 5:
        sys.stderr.write(docstring)
        sys.exit(1)

    target = sys.argv[1] # target-id
    pdb = sys.argv[2] # pdb for evaluated map
    feat_dir = sys.argv[3] # feature dir generated by user
    ref_dir = sys.argv[4] # example dir you want compare with

    pdb = os.path.abspath(pdb)
    feat_dir = os.path.abspath(feat_dir)
    ref_dir = os.path.abspath(ref_dir)

    script_path = os.path.dirname(os.path.abspath(__file__))

    if os.path.samefile(feat_dir,ref_dir):
        print("You are comparing the same feature dir "+feat_dir+"!!!")
        print("python compare_feat.py <target-id> <pdb> <feat-dir> <example-dir>")
        sys.exit(1)
    else:
        if not os.path.exists(feat_dir):
            print("feat-dir "+feat_dir+" doesn't exist!!")
            print("Usage: python compare_feat.py <target-id> <pdb> <feat-dir> <example-dir>")
            sys.exit(1)

        if not os.path.exists(ref_dir):
            print("example-dir "+ref_dir+" doesn't exist!!")
            print("Usage:python compare_feat.py <target-id> <pdb> <feat-dir> <example-dir>")
            sys.exit(1)

        if not os.path.exists(pdb):
            print("pdb for evaluating ccmpred,freecontact, nncon and betacon "+pdb+" doesn't exist!!")
            print("Usage:python compare_feat.py <target-id> <pdb> <feat-dir> <example-dir>")
            sys.exit(1)

    #####Step1 Compare 1D (PSIPRED, PSSM, SS_SA)
    #####ss_sa
    ss_sa = feat_dir+"/ss_sa/"+target+".ss_sa"
    ss_sa_ref = ref_dir+"/ss_sa/"+target+".ss_sa"
    if filecmp.cmp(ss_sa,ss_sa_ref):
        print(" ss_sa are the same!!!!")
    else:
        print(" ss_sa are the different!!!!Please check!!!")

    #####pssm
    pssm = feat_dir+"/pssm/"+target+".pssm"
    pssm_ref = ref_dir+"/pssm/"+target+".pssm"
    if filecmp.cmp(pssm,pssm_ref):
        print(" pssm are the same!!!!")
    else:
        print(" pssm are the different!!!!Please check!!!")

    #####psipred
    psipred_ss2 = feat_dir+"/psipred/"+target+".ss2"
    psipred_ss2_ref = ref_dir+"/psipred/"+target+".ss2"
    psipred_solv = feat_dir+"/psipred/"+target+".solv"
    psipred_solv_ref = ref_dir+"/psipred/"+target+".solv"

    if filecmp.cmp(psipred_ss2,psipred_ss2_ref) and filecmp.cmp(psipred_solv,psipred_solv_ref):
        print(" psipred are the same!!!!")
    else:
        print(" psipred are the different!!!!Please check!!!")


    #####Step2 Compare alignment
    MSA = feat_dir+"/alignment/"+target+".aln"
    MSA_ref = ref_dir+"/alignment/"+target+".aln"
    check_path(MSA)
    check_path(MSA_ref)

    colstats = feat_dir+"/alnstat/"+target+".colstats"
    colstats_ref = ref_dir+"/alnstat/"+target+".colstats"
    check_path(colstats)
    check_path(colstats_ref)

    N,NEFF = ALNSTAT(colstats)
    N_ref,NEFF_ref = ALNSTAT(colstats_ref)
    print(" NUM of sequences(user):"+str(N)+" NUM of sequences(example):"+str(N_ref))
    print(" NUM of effective sequences(user):"+str(NEFF)+" NUM of effective sequences(example):"+str(NEFF_ref))

    #####Step3 Compare maps(ccmpred,freecontact,nncon,betacon)
    #####ccmpred
    ccmpred = feat_dir+"/ccmpred/"+target+".ccmpred"
    ccmpred_ref = ref_dir+"/ccmpred/"+target+".ccmpred"
    check_path(ccmpred)
    check_path(ccmpred_ref)
    os.chdir(feat_dir+"/ccmpred")
    map2rr(target,ccmpred,'ccmpred')
    if os.path.exists(feat_dir+"/ccmpred/"+target+".ccmpred.rr") and os.path.getsize(feat_dir+"/ccmpred/"+target+".ccmpred.rr") > 0:
        evalrr(feat_dir+"/ccmpred/"+target+".ccmpred.rr",pdb)
    else:
        print(feat_dir+"/ccmpred/"+target+".ccmpred failed to convert rr format!!")

    os.chdir(ref_dir+"/ccmpred")
    map2rr(target,ccmpred_ref,'ccmpred')
    if os.path.exists(ref_dir+"/ccmpred/"+target+".ccmpred.rr") and os.path.getsize(ref_dir+"/ccmpred/"+target+".ccmpred.rr") > 0:
        evalrr(ref_dir+"/ccmpred/"+target+".ccmpred.rr",pdb)
    else:
        print(ref_dir+"/ccmpred/"+target+".ccmpred failed to convert rr format!!")

    prec = feat_dir+"/ccmpred/precision.txt"
    prec_ref = ref_dir+"/ccmpred/precision.txt"
    if not os.path.exists(prec):
        print(feat_dir+" ccmpred evaluation failed")
    elif not os.path.exists(prec_ref):
        print(ref_dir+" ccmpred evaluation failed")
    else:
        with open(prec,'r') as f1, open(prec_ref,'r') as f2: 
            for x, y in zip(f1, f2):
                if (".ccmpred.rr (precision)" in x) and (".ccmpred.rr (precision)" in y):
                    x = x.strip()
                    x = re.sub("\.rr \(precision\)","    (user) ",x)
                    y = y.strip()
                    y = re.sub("\.rr \(precision\)"," (example) ",y)
                    print(" {0}\n {1}".format(x, y))

    #####freecontact
    freecontact = feat_dir+"/freecontact/"+target+".freecontact.rr"
    freecontact_ref = ref_dir+"/freecontact/"+target+".freecontact.rr"
    check_path(freecontact)
    check_path(freecontact_ref)
    os.chdir(feat_dir+"/freecontact")
    freecon2rr(target,freecontact)
    if os.path.exists(feat_dir+"/freecontact/"+target+".coneva") and os.path.getsize(feat_dir+"/freecontact/"+target+".coneva") > 0:
        evalrr(feat_dir+"/freecontact/"+target+".coneva",pdb)
    else:
        print(feat_dir+"/freecontact/"+target+".freecontact.rr failed to convert rr format!!")

    os.chdir(ref_dir+"/freecontact")
    freecon2rr(target,freecontact_ref)
    if os.path.exists(ref_dir+"/freecontact/"+target+".coneva") and os.path.getsize(ref_dir+"/freecontact/"+target+".coneva") > 0:
        evalrr(ref_dir+"/freecontact/"+target+".coneva",pdb)
    else:
        print(ref_dir+"/freecontact/"+target+".freecontact.rr failed to convert rr format!!")

    prec = feat_dir+"/freecontact/precision.txt"
    prec_ref = ref_dir+"/freecontact/precision.txt"
    if not os.path.exists(prec):
        print(feat_dir+" freecontact evaluation failed")
    elif not os.path.exists(prec_ref):
        print(ref_dir+" freecontact evaluation failed")
    else:
        with open(prec,'r') as f1, open(prec_ref,'r') as f2: 
            for x, y in zip(f1, f2):
                if (".coneva (precision)" in x) and (".coneva (precision)" in y):
                    x = x.strip()
                    x = re.sub("\.coneva \(precision\)",".freecontact    (user) ",x)
                    y = y.strip()
                    y = re.sub("\.coneva \(precision\)",".freecontact (example) ",y)
                    print(" {0}\n {1}".format(x, y))

    #####nncon
    nncon = feat_dir+"/nncon/"+target+"_fasta.cm8a"
    nncon_ref = ref_dir+"/nncon/"+target+"_fasta.cm8a"
    check_path(nncon)
    check_path(nncon_ref)
    os.chdir(feat_dir+"/nncon")
    map2rr(target,nncon,'nncon')
    if os.path.exists(feat_dir+"/nncon/"+target+".nncon.rr") and os.path.getsize(feat_dir+"/nncon/"+target+".nncon.rr") > 0:
        evalrr(feat_dir+"/nncon/"+target+".nncon.rr",pdb)
    else:
        print(nncon+" failed to convert rr format!!")

    os.chdir(ref_dir+"/nncon")
    map2rr(target,nncon_ref,'nncon')
    if os.path.exists(ref_dir+"/nncon/"+target+".nncon.rr") and os.path.getsize(ref_dir+"/nncon/"+target+".nncon.rr") > 0:
        evalrr(ref_dir+"/nncon/"+target+".nncon.rr",pdb)
    else:
        print(nncon_ref+" failed to convert rr format!!")

    prec = feat_dir+"/nncon/precision.txt"
    prec_ref = ref_dir+"/nncon/precision.txt"
    if not os.path.exists(prec):
        print(feat_dir+" nncon evaluation failed")
    elif not os.path.exists(prec_ref):
        print(ref_dir+" nncon evaluation failed")
    else:
        with open(prec,'r') as f1, open(prec_ref,'r') as f2: 
            for x, y in zip(f1, f2):
                if (".nncon.rr (precision)" in x) and (".nncon.rr (precision)" in y):
                    x = x.strip()
                    x = re.sub("\.rr \(precision\)","    (user) ",x)
                    y = y.strip()
                    y = re.sub("\.rr \(precision\)"," (example) ",y)
                    print(" {0}\n {1}".format(x, y))

    #####betacon
    betacon = feat_dir+"/betacon/"+target+"_fasta.cm8a.comb"
    betacon_ref = ref_dir+"/betacon/"+target+"_fasta.cm8a.comb"
    check_path(betacon)
    check_path(betacon_ref)
    os.chdir(feat_dir+"/betacon")
    map2rr(target,betacon,'betacon')
    if os.path.exists(feat_dir+"/betacon/"+target+".betacon.rr") and os.path.getsize(feat_dir+"/betacon/"+target+".betacon.rr") > 0:
        evalrr(feat_dir+"/betacon/"+target+".betacon.rr",pdb)
    else:
        print(betacon+" failed to convert rr format!!")

    os.chdir(ref_dir+"/betacon")
    map2rr(target,betacon_ref,'betacon')
    if os.path.exists(ref_dir+"/betacon/"+target+".betacon.rr") and os.path.getsize(ref_dir+"/betacon/"+target+".betacon.rr") > 0:
        evalrr(ref_dir+"/betacon/"+target+".betacon.rr",pdb)
    else:
        print(betacon_ref+" failed to convert rr format!!")

    prec = feat_dir+"/betacon/precision.txt"
    prec_ref = ref_dir+"/betacon/precision.txt"
    if not os.path.exists(prec):
        print(feat_dir+" betacon evaluation failed")
    elif not os.path.exists(prec_ref):
        print(ref_dir+" betacon evaluation failed")
    else:
        with open(prec,'r') as f1, open(prec_ref,'r') as f2: 
            for x, y in zip(f1, f2):
                if (".betacon.rr (precision)" in x) and (".betacon.rr (precision)" in y):
                    x = x.strip()
                    x = re.sub("\.rr \(precision\)","    (user) ",x)
                    y = y.strip()
                    y = re.sub("\.rr \(precision\)"," (example) ",y)
                    print(" {0}\n {1}".format(x, y))
                    